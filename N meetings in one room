#include <bits/stdc++.h>
using namespace std;

struct Data {
    int start, end_time, pos;
};

// Comparator function for sorting based on end time
static bool comp(const Data &val1, const Data &val2) {
    return val1.end_time < val2.end_time;
}

// Function to find the maximum number of meetings
int maxMeetings(vector<int> &start, vector<int> &end) {
    int n = start.size();
    vector<Data> arr(n);

    // Store meeting details
    for (int i = 0; i < n; i++) {
        arr[i] = {start[i], end[i], i + 1};
    }

    // Sort meetings by end time
    sort(arr.begin(), arr.end(), comp);

    int count = 1; // First meeting is always selected
    int free_time = arr[0].end_time;
    
    for (int j = 1; j < n; j++) {
        if (arr[j].start > free_time) {
            count++;
            free_time = arr[j].end_time;
        }
    }

    return count;
}

// Driver code
int main() {
    vector<int> start = {1, 3, 0, 5, 8, 5};
    vector<int> end = {2, 4, 6, 7, 9, 9};

    cout << "Max Meetings: " << maxMeetings(start, end) << endl;
    return 0;
}
