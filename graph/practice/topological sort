    void dfs(int node,vector<vector<int>>& adj,stack<int>& st,int vis[]){
        vis[node]=1;
        for(auto it:adj[node]){
            if(!vis[it]) dfs(it,adj,st,vis);
        }
        //after all dfs last reach se
        st.push(node);
        
    }
  
   
    // Function to return list containing vertices in Topological order.
    vector<int> topologicalSort(vector<vector<int>>& adj) {
        int vis[]={0};
        stack<int> st;
        int v=adj.size();
        for(int i=0;i<v;i++){
            if(!vis[i]){
                dfs(i,adj,st,vis);
            }
        }
        vector<int> ans;
        while(!st.empty()){
            ans.push_back(st.top());
            st.pop();
        }
        return ans;
    }
