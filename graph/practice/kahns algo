    // Function to return list containing vertices in Topological order using bfs
    vector<int> topologicalSort(vector<vector<int>>& adj) {
        int v=adj.size();
        int indegree[v]={0};
        //filling
        for(int i=0;i<v;i++){
            for(auto it:adj[i]){
                indegree[it]++;
            }
        }
        queue<int> q;

        for(int i=0;i<v;i++){
            if(indegree[i]==0){
                q.push(i);
            }
           
            }
        
        vector<int> ans;
        while(!q.empty()){
            int node=q.front();
            q.pop();
            ans.push_back(node);
            //node is removed reduce indegree with it
            for(auto it:adj[node]){
                indegree[it]--;
                if(indegree[it]==0){
                q.push(it);
            }
                
            }
        }
        
    return ans;
    }
